# Generated by Django 4.0.4 on 2022-05-22 16:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCenters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=50, verbose_name='Код')),
                ('title', models.CharField(db_index=True, max_length=50, verbose_name='Наименование')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('addr', models.CharField(blank=True, max_length=350, verbose_name='Адрес')),
                ('post_addr', models.CharField(blank=True, max_length=350, verbose_name='Почтовый адрес')),
                ('conditions', models.TextField(blank=True, verbose_name='Особыче условия')),
                ('free_parts', models.BooleanField(default=False, verbose_name='Бесплатные запчасти')),
                ('grade', models.FloatField(default=5, verbose_name='Рэйтинг')),
                ('note', models.TextField(blank=True, verbose_name='Примечание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ативен')),
            ],
            options={
                'verbose_name': 'Сервисный центр',
                'verbose_name_plural': 'Сервисные центры',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRegions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=50, verbose_name='Наименование')),
                ('staff_user', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ServiceContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Фамилия, имя, отчетство')),
                ('funct', models.CharField(blank=True, max_length=150, verbose_name='Должность')),
                ('tel_num', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('note', models.CharField(blank=True, max_length=350, verbose_name='Примечание')),
                ('service_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicecentres.servicecenters', verbose_name='Сервисный ццентр')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
                'ordering': ['service_center', 'name'],
            },
        ),
        migrations.AddField(
            model_name='servicecenters',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='servicecentres.serviceregions', verbose_name='Регион'),
        ),
        migrations.AddField(
            model_name='servicecenters',
            name='staff_user',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_user', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер'),
        ),
        migrations.AddField(
            model_name='servicecenters',
            name='user',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_staff': False}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
